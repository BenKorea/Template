---
title: "Template"
description:  "Github에서 사용할 수 있는 template"
author: "BenKorea feat. ChatGPT"
date: "2024-12-17"
date-modified: last-modified
categories: [Template]
---


```{r}

#| label: load-scripts
#| echo: false

project_root <- rprojroot::find_root(rprojroot::is_rstudio_project)

custom_load_scripts <- function (source_folder) {
  source_path <- file.path(project_root, source_folder)
  r_files <- list.files(source_path, pattern = "\\.R$", full.names = TRUE)
  invisible(lapply(r_files, source))
}

custom_load_scripts("source")
```


::: {.callout-note title="제목을 입력하세요" style="background-color: #f0f8ff" collapse="open" appearance="minimal"}
-   [x] check된 box
-   [ ] check되지 않은 box
:::



툴팁은 [`특정문자`]{.text-primary data-bs-toggle="tooltip" data-bs-html="true" data-bs-placement="bottom" title="1열<br>
2열"}이 구현되어야 한다.

```{r project_name, eval=FALSE, filename="recommeded project name"}
R-4.4.1-Hands_on_Shinylive_Example
```





## 목적
- Quarto Website 프로젝트를 생성하고 Bootstrap tooltip 및 Utterance 기능구현을 위한 설정, Render 기능을 위한 기본적인 R 패키지 설치까지를 template화 함.

## 개별요소 활용방법

### custom function scripts 일괄 호출 청크
- `getwd()` 명령이 포함된 *.qmd 파일이 프로젝트 디렉토리에 있으면 `getwd()`를 사용하여도 무방합니다.
- 그러나 저자와 같이 `*.qmd` 파일이  프로젝트 디렉토리가 아닌 하부 디렉토리에 있으면 `getwd()`는 프로젝트 디렉토리가 아닌 `*.qmd` 파일의 경로를 반환하여 원치 않은 결과를 초래합니다.
- 이를 위해서 `*.qmd` 파일의 경로와 무관하게 프로젝트 디렉토리의 경로를 반환받기 위해 `rporjroot::find_root(rprojroot::is_rstudio_project)`를 사용하였습니다.


#### Callout with color
-   위의 예시와 같이 style 속성을 사용하여 배경색상을 지정할 수 있습니다.
-   HTML 문법에 맞게 작성되어야 하며, 코드의 가독성 때문에 줄바꿈은 사용하면 작동하지 않으므로 주의해야 합니다.